name: Build
on: [push]

jobs:
  android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Build
        run: ./gradlew assembleDebug
        working-directory: android
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Android
          path: android/app/build/outputs/apk/debug/app-debug.apk
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup Visual Studio
        uses: ilammy/msvc-dev-cmd@v1
      - name: Configure project
        run: cmake -A Win32 -S . -B build
      - name: Build
        run: cmake --build . --config Release
        working-directory: build
      - name: Generate extras.pak
        run: python makepak.py pak/ extras.pak
        working-directory: android/app
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Windows
          path: |
            build/cl_dll/Release/client.dll
            build/mainui/Release/menu.dll
            android/app/extras.pak
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib cmake ninja-build libfontconfig-dev:i386
      - name: Configure project
        run: |
          export CC="gcc -m32"
          export CXX="g++ -m32"
          cmake -S . -B build -G Ninja
      - name: Build
        run: cmake --build . --config Release
        working-directory: build
      - name: Generate extras.pak
        run: python makepak.py pak/ extras.pak
        working-directory: android/app
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Linux
          path: |
            build/cl_dll/client.so
            build/mainui/menu.so
            android/app/extras.pak
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [android, windows, linux]
    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v2
      - name: Repackage binaries
        run: |
          mv Android/app-debug.apk tf15-client.apk
          mkdir -p tfc/cl_dlls
          mv Windows/build/*/*/*.dll tfc/cl_dlls
          mv Windows/android/app/extras.pak tfc/
          zip -r tf15-client_win32.zip tfc/
          rm -r tfc
          mkdir -p tfc/cl_dlls
          mv Linux/build/*/*.so tfc/cl_dlls
          mv Linux/android/app/extras.pak tfc/
          tar -czvf tf15-client_linux.tar.gz tfc/
      - name: Remove old release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: continuous
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload new release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: tf15-client*
          tag: continuous
          overwrite: true
          prerelease: true
          release_name: TF15-Client developer build
